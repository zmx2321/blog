(window.webpackJsonp=window.webpackJsonp||[]).push([[660],{1340:function(t,n,a){"use strict";a.r(n);var e=a(26),o=Object(e.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"记忆化斐波那契函数-memoization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#记忆化斐波那契函数-memoization"}},[t._v("#")]),t._v(" 记忆化斐波那契函数（Memoization）")]),t._v(" "),a("ClientOnly",[a("Valine")],1),t._v(" "),a("h2",{attrs:{id:"题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[t._v("#")]),t._v(" 题目")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"http://zmx2321.github.io/blog_code/algorithm/script-oj/js-foundation/js-foundation-1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例链接"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("斐波那契数列指的是类似于以下的数列：")]),t._v(" "),a("p",[t._v("1, 1, 2, 3, 5, 8, 13, ....\n也就是，第 n 个数由数列的前两个相加而来：f(n) = f(n - 1) + f(n -2)")]),t._v(" "),a("p",[t._v("请你完成 fibonacci 函数，接受 n 作为参数，可以获取数列中第 n 个数，例如：")]),t._v(" "),a("p",[t._v("fibonacci(1) // => 1\nfibonacci(2) // => 1\nfibonacci(3) // => 2\n...\n测试程序会从按顺序依次获取斐波那契数列中的数，请注意程序不要超时，也不要添加额外的全局变量。")]),t._v(" "),a("p",[t._v("本题来源：《JavaScript 语言精髓》")]),t._v(" "),a("h2",{attrs:{id:"解答"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解答"}},[t._v("#")]),t._v(" 解答")])],1)}),[],!1,null,null,null);n.default=o.exports}}]);